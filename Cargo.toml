[package]
name = "quickcodes"
version = "0.1.0"
edition = "2021"
authors = ["MÃ¡rcio Reck <marcio@fazmercado.com>"]
description = "Universal Barcode & QR Toolkit - Generate and read 1D and 2D codes with high performance"
license = "MIT"
repository = "https://github.com/marcioreck/quickcodes"
homepage = "https://github.com/marcioreck/quickcodes"
documentation = "https://docs.rs/quickcodes"
keywords = ["barcode", "qrcode", "ean", "code128", "datamatrix"]
categories = ["encoding", "multimedia::images"]
readme = "README.md"

[lib]
name = "quickcodes"
crate-type = ["cdylib", "rlib", "staticlib"]

[dependencies]
# Error handling
thiserror = "2.0"
anyhow = "1.0"

# Image processing and generation
image = { version = "0.25", optional = true }
imageproc = { version = "0.23", optional = true }
resvg = { version = "0.44", optional = true }
usvg = { version = "0.44", optional = true }
tiny-skia = { version = "0.11", optional = true }

# QR Code generation
qrcode = "0.14"

# SVG generation
svg = "0.18"

# PDF generation
printpdf = { version = "0.7", features = ["embedded_images"], optional = true }

# Image reading and processing (for barcode detection)
rqrr = { version = "0.7", optional = true }  # QR code reader

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CLI (for future CLI tool)
clap = { version = "4.5", features = ["derive"], optional = true }

# Python bindings (optional)
pyo3 = { version = "0.24", features = ["extension-module"], optional = true }

# Date and time
chrono = "0.4"

[features]
default = ["png", "svg", "pdf"]
png = ["dep:image"]
svg = ["dep:resvg", "dep:usvg", "dep:tiny-skia"]
pdf = ["dep:printpdf"]
readers = ["dep:image", "dep:imageproc", "dep:rqrr"]
cli = ["dep:clap"]
python = ["dep:pyo3"]

[dev-dependencies]
criterion = "0.5"
tempfile = "3.8"
chrono = "0.4"
printpdf = { version = "0.7", features = ["embedded_images"] }
resvg = "0.44"
usvg = "0.44"
tiny-skia = "0.11"
image = "0.25"
imageproc = "0.23"

[[example]]
name = "generate_test_sheet"
path = "examples/generate_test_sheet.rs"
required-features = ["svg", "pdf"]